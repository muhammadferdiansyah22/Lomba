#include <iostream>
using namespace std;

void merge(int arr[], int p, int q, int r) {
  int n1 = q - p + 1;
  int n2 = r - q;

  int L[n1], M[n2];

  for (int i = 0; i < n1; i++)
    L[i] = arr[p + i];
  for (int j = 0; j < n2; j++)
    M[j] = arr[q + 1 + j];
  int i, j, k;
  i = 0;
  j = 0;
  k = p;

  while (i < n1 && j < n2) {
    if (L[i] <= M[j]) {
      arr[k] = L[i];
      i++;
    } else {
      arr[k] = M[j];
      j++;
    }
    k++;
  }

 
  while (i < n1) {
    arr[k] = L[i];
    i++;
    k++;
  }

  while (j < n2) {
    arr[k] = M[j];
    j++;
    k++;
  }
}

void mergeSort(int arr[], int l, int r) {
  if (l < r) {
    int m = l + (r - l) / 2;

    mergeSort(arr, l, m);
    mergeSort(arr, m + 1, r);
    merge(arr, l, m, r);
  }
}
void ringkasan(int arr[], int n) {
    mergeSort(arr, 0, n - 1);
    int mulai = arr[0];
    int sekarang = mulai;
    cout << mulai;

    for (int i = 1; i < n; i++) {
        if (arr[i] == sekarang || arr[i] == sekarang + 1) {
            sekarang = arr[i];
        } else {
            if (sekarang > mulai) {
                cout << "-" << sekarang;
            }
            mulai = sekarang=arr[i];
            cout<<","<<mulai;
        }
    }
    if(sekarang > mulai) {
        cout << "-" << sekarang;
    }
}
int main(){
    int  a;
    cin>>a;
    int b[a];
    for(int i = 0; i < a; i++){
        cin>>b[i];
    }
   
    ringkasan(b,a);
}
